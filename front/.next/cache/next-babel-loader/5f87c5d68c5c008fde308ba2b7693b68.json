{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n// export const initialState = {\n//     mainPosts: [{\n//       id: 1,\n//       User: {\n//         id: 1,\n//         nickname: '제로초',\n//       },\n//       content: '첫 번째 게시글',\n//       Images: [{\n//         src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\n//       }, {\n//         src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\n//       }, {\n//         src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\n//       }],\n//       Comments: [{\n//         User: {\n//           nickname: 'nero',\n//         },\n//         content: '우와 개정판이 나왔군요~',\n//       }, {\n//         User: {\n//           nickname: 'hero',\n//         },\n//         content: '얼른 사고싶어요~',\n//       }]\n//     }],\n//     imagePaths: [],\n//     postAdded: false,\n//   };\n\nimport { DashboardFilled } from \"@ant-design/icons\";\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    },\n    content: '첫 번째 게시글',\n    Images: [{\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg'\n    }],\n    Comments: [{\n      User: {\n        nickname: 'nero'\n      },\n      content: '우와 개정판이 나왔군요~'\n    }, {\n      User: {\n        nickname: 'hero'\n      },\n      content: '얼른 사고싶어요~'\n    }]\n  }],\n  imagePaths: [],\n  hasMorePosts: true,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport var LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport var LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\nvar dummyPost = {\n  id: 2,\n  content: '더미데이터입니다.',\n  User: {\n    id: 1,\n    nickname: '제로초'\n  },\n  Images: [],\n  Comments: []\n};\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostError: null,\n        addPostDone: false\n        // mainPosts:[dummyPost,...state.mainPosts],\n        // postAdded:true\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        // addPostError : null,\n        addPostDone: false\n      });\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["DashboardFilled","initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","hasMorePosts","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","reducer","state","arguments","length","undefined","action","_objectSpread"],"sources":["/Users/dong/dongprepare/front/reducers/post.js"],"sourcesContent":["// export const initialState = {\n//     mainPosts: [{\n//       id: 1,\n//       User: {\n//         id: 1,\n//         nickname: '제로초',\n//       },\n//       content: '첫 번째 게시글',\n//       Images: [{\n//         src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\n//       }, {\n//         src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\n//       }, {\n//         src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\n//       }],\n//       Comments: [{\n//         User: {\n//           nickname: 'nero',\n//         },\n//         content: '우와 개정판이 나왔군요~',\n//       }, {\n//         User: {\n//           nickname: 'hero',\n//         },\n//         content: '얼른 사고싶어요~',\n//       }]\n//     }],\n//     imagePaths: [],\n//     postAdded: false,\n//   };\n\nimport { DashboardFilled } from \"@ant-design/icons\";\n\nexport const initialState = {\n       mainPosts: [{\n      id: 1,\n      User: {\n        id: 1,\n        nickname: '제로초',\n      },\n      content: '첫 번째 게시글',\n      Images: [{\n        src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\n      }, {\n        src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\n      }, {\n        src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\n      }],\n      Comments: [{\n        User: {\n          nickname: 'nero',\n        },\n        content: '우와 개정판이 나왔군요~',\n      }, {\n        User: {\n          nickname: 'hero',\n        },\n        content: '얼른 사고싶어요~',\n      }]\n    }],\n    imagePaths: [],\n    hasMorePosts: true,\n    loadPostsLoading: false,\n    loadPostsDone: false,\n    loadPostsError: null,\n    addPostLoading: false,\n    addPostDone: false,\n    addPostError: null,\n    removePostLoading: false,\n    removePostDone: false,\n    removePostError: null,\n    addCommentLoading: false,\n    addCommentDone: false,\n    addCommentError: null,\n  };\n  \n\n\n  export const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\n  export const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\n  export const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\n  \n  export const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\n  export const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\n  export const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n  \n  export const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\n  export const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\n  export const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n  \n  export const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\n  export const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\n  export const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\n  export const addPost=(data)=>({\n      type:ADD_POST_REQUEST,\n      data\n  })\n\n  export const addComment=(data)=>({\n      type:ADD_COMMENT_REQUEST,\n      data\n  })\n \n\n\nconst dummyPost = {\n    id: 2,\n    content: '더미데이터입니다.',\n    User: {\n      id: 1,\n      nickname: '제로초',\n    },\n    Images: [],\n    Comments: [],\n  };\n\nconst reducer=(state=initialState,action)=>{\n    switch(action.type){\n        case ADD_POST_REQUEST:\n            return{\n                ...state,\n                addPostLoading:true,\n                addPostDone:false,\n                addPostError:null,\n                \n            }\n            case ADD_POST_SUCCESS:\n                return{\n                    ...state,\n                    addPostLoading:false,\n                    addPostError : null,\n                    addPostDone:false,\n                    // mainPosts:[dummyPost,...state.mainPosts],\n                    // postAdded:true\n                }\n\n                case ADD_POST_FAILURE:\n                    return{\n                        ...state,\n                        addPostLoading:false,\n                        // addPostError : null,\n                        addPostDone:false,\n                    }\n        \n\n        default:\n            return state\n    }\n}\n\nexport default reducer"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,eAAe,QAAQ,mBAAmB;AAEnD,OAAO,IAAMC,YAAY,GAAG;EACrBC,SAAS,EAAE,CAAC;IACbC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;MACJD,EAAE,EAAE,CAAC;MACLE,QAAQ,EAAE;IACZ,CAAC;IACDC,OAAO,EAAE,UAAU;IACnBC,MAAM,EAAE,CAAC;MACPC,GAAG,EAAE;IACP,CAAC,EAAE;MACDA,GAAG,EAAE;IACP,CAAC,EAAE;MACDA,GAAG,EAAE;IACP,CAAC,CAAC;IACFC,QAAQ,EAAE,CAAC;MACTL,IAAI,EAAE;QACJC,QAAQ,EAAE;MACZ,CAAC;MACDC,OAAO,EAAE;IACX,CAAC,EAAE;MACDF,IAAI,EAAE;QACJC,QAAQ,EAAE;MACZ,CAAC;MACDC,OAAO,EAAE;IACX,CAAC;EACH,CAAC,CAAC;EACFI,UAAU,EAAE,EAAE;EACdC,YAAY,EAAE,IAAI;EAClBC,gBAAgB,EAAE,KAAK;EACvBC,aAAa,EAAE,KAAK;EACpBC,cAAc,EAAE,IAAI;EACpBC,cAAc,EAAE,KAAK;EACrBC,WAAW,EAAE,KAAK;EAClBC,YAAY,EAAE,IAAI;EAClBC,iBAAiB,EAAE,KAAK;EACxBC,cAAc,EAAE,KAAK;EACrBC,eAAe,EAAE,IAAI;EACrBC,iBAAiB,EAAE,KAAK;EACxBC,cAAc,EAAE,KAAK;EACrBC,eAAe,EAAE;AACnB,CAAC;AAID,OAAO,IAAMC,kBAAkB,GAAG,oBAAoB;AACtD,OAAO,IAAMC,kBAAkB,GAAG,oBAAoB;AACtD,OAAO,IAAMC,kBAAkB,GAAG,oBAAoB;AAEtD,OAAO,IAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,IAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,IAAMC,gBAAgB,GAAG,kBAAkB;AAElD,OAAO,IAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,IAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,IAAMC,mBAAmB,GAAG,qBAAqB;AAExD,OAAO,IAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,IAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,IAAMC,mBAAmB,GAAG,qBAAqB;AAExD,OAAO,IAAMC,OAAO,GAAC,SAARA,OAAOA,CAAEC,IAAI;EAAA,OAAI;IAC1BC,IAAI,EAACX,gBAAgB;IACrBU,IAAI,EAAJA;EACJ,CAAC;AAAA,CAAC;AAEF,OAAO,IAAME,UAAU,GAAC,SAAXA,UAAUA,CAAEF,IAAI;EAAA,OAAI;IAC7BC,IAAI,EAACL,mBAAmB;IACxBI,IAAI,EAAJA;EACJ,CAAC;AAAA,CAAC;AAIJ,IAAMG,SAAS,GAAG;EACdrC,EAAE,EAAE,CAAC;EACLG,OAAO,EAAE,WAAW;EACpBF,IAAI,EAAE;IACJD,EAAE,EAAE,CAAC;IACLE,QAAQ,EAAE;EACZ,CAAC;EACDE,MAAM,EAAE,EAAE;EACVE,QAAQ,EAAE;AACZ,CAAC;AAEH,IAAMgC,OAAO,GAAC,SAARA,OAAOA,CAAA,EAA8B;EAAA,IAA5BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC1C,YAAY;EAAA,IAAC6C,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACpC,QAAOC,MAAM,CAACR,IAAI;IACd,KAAKX,gBAAgB;MACjB,OAAAoB,aAAA,CAAAA,aAAA,KACOL,KAAK;QACR3B,cAAc,EAAC,IAAI;QACnBC,WAAW,EAAC,KAAK;QACjBC,YAAY,EAAC;MAAI;IAGrB,KAAKW,gBAAgB;MACjB,OAAAmB,aAAA,CAAAA,aAAA,KACOL,KAAK;QACR3B,cAAc,EAAC,KAAK;QACpBE,YAAY,EAAG,IAAI;QACnBD,WAAW,EAAC;QACZ;QACA;MAAA;;IAGJ,KAAKa,gBAAgB;MACjB,OAAAkB,aAAA,CAAAA,aAAA,KACOL,KAAK;QACR3B,cAAc,EAAC,KAAK;QACpB;QACAC,WAAW,EAAC;MAAK;IAIjC;MACI,OAAO0B,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}