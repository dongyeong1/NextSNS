{"ast":null,"code":"import { func } from 'prop-types';\nimport { all, fork, call, take, put, takeEvery, takeLatest, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from '../reducers/user';\nfunction logInAPI(data) {\n  return axios.post('/api/login');\n}\nfunction logOutAPI() {\n  return axios.post('/api/login');\n}\nfunction* logIn(action) {\n  try {\n    console.log('loginnnnnnn');\n    yield delay(1000);\n    // const result =yield call(logInAPI,action.data) //call은동기니깐 put할때까지 기다려준다\n    yield put({\n      type: LOG_IN_SUCCESS\n      // data:result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      data: err.response.data,\n      ß\n    });\n  }\n}\nfunction* logOut() {\n  try {\n    console.log('asdads');\n    yield delay(1000);\n    // const result =yield call(logOutAPI) //call은동기니깐 put할때까지 기다려준다\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, logIn); //LOG_IN이란 액션이 실행될때까지 기다리겠다\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogOut)]);\n}","map":{"version":3,"names":["func","all","fork","call","take","put","takeEvery","takeLatest","delay","axios","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","logInAPI","data","post","logOutAPI","logIn","action","console","log","type","err","response","ß","logOut","watchLogin","watchLogOut","userSaga"],"sources":["/Users/dong/dongprepare/front/sagas/user.js"],"sourcesContent":["import { func } from 'prop-types'\nimport {all,fork,call,take,put, takeEvery, takeLatest, delay} from 'redux-saga/effects'\n\nimport axios from 'axios'\n\n\nimport {\n    FOLLOW_FAILURE,\n    FOLLOW_REQUEST,\n    FOLLOW_SUCCESS,\n    LOG_IN_FAILURE,\n    LOG_IN_REQUEST,\n    LOG_IN_SUCCESS,\n    LOG_OUT_FAILURE,\n    LOG_OUT_REQUEST,\n    LOG_OUT_SUCCESS,\n    SIGN_UP_FAILURE,\n    SIGN_UP_REQUEST,\n    SIGN_UP_SUCCESS,\n    UNFOLLOW_FAILURE,\n    UNFOLLOW_REQUEST,\n    UNFOLLOW_SUCCESS,\n  } from '../reducers/user';\n  \n\n\nfunction logInAPI(data){\n    return axios.post('/api/login')\n}\n\nfunction logOutAPI(){\n    return axios.post('/api/login')\n}\n\n\n\nfunction* logIn(action){\n\n    try{\n                console.log('loginnnnnnn')\n\n        yield delay(1000)\n        // const result =yield call(logInAPI,action.data) //call은동기니깐 put할때까지 기다려준다\n        yield put({\n            type:LOG_IN_SUCCESS,\n            // data:result.data\n        })\n        \n    }catch(err){\n        yield put({\n            type: LOG_IN_FAILURE,\n            data:err.response.data,ß\n        })\n    }\n    \n}\n\n\n\nfunction* logOut(){\n\n    try{\n        console.log('asdads')\n\n        yield delay(1000)\n        // const result =yield call(logOutAPI) //call은동기니깐 put할때까지 기다려준다\n        yield put({\n            type:LOG_OUT_SUCCESS,\n        })\n        \n    }catch(err){\n        yield put({\n            type: LOG_OUT_FAILURE,\n            data:err.response.data,\n        })\n    }\n    \n}\n\n\nfunction* watchLogin(){\n    yield takeLatest(LOG_IN_REQUEST,logIn) //LOG_IN이란 액션이 실행될때까지 기다리겠다\n}\n\nfunction* watchLogOut(){\n    yield takeLatest(LOG_OUT_REQUEST,logOut)\n}\n\n\nexport default function* userSaga(){\n yield all([\n    fork(watchLogin),\n    fork(watchLogOut),\n ])\n}"],"mappings":"AAAA,SAASA,IAAI,QAAQ,YAAY;AACjC,SAAQC,GAAG,EAACC,IAAI,EAACC,IAAI,EAACC,IAAI,EAACC,GAAG,EAAEC,SAAS,EAAEC,UAAU,EAAEC,KAAK,QAAO,oBAAoB;AAEvF,OAAOC,KAAK,MAAM,OAAO;AAGzB,SACIC,cAAc,EACdC,cAAc,EACdC,cAAc,EACdC,cAAc,EACdC,cAAc,EACdC,cAAc,EACdC,eAAe,EACfC,eAAe,EACfC,eAAe,EACfC,eAAe,EACfC,eAAe,EACfC,eAAe,EACfC,gBAAgB,EAChBC,gBAAgB,EAChBC,gBAAgB,QACX,kBAAkB;AAI3B,SAASC,QAAQA,CAACC,IAAI,EAAC;EACnB,OAAOjB,KAAK,CAACkB,IAAI,CAAC,YAAY,CAAC;AACnC;AAEA,SAASC,SAASA,CAAA,EAAE;EAChB,OAAOnB,KAAK,CAACkB,IAAI,CAAC,YAAY,CAAC;AACnC;AAIA,UAAUE,KAAKA,CAACC,MAAM,EAAC;EAEnB,IAAG;IACSC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAElC,MAAMxB,KAAK,CAAC,IAAI,CAAC;IACjB;IACA,MAAMH,GAAG,CAAC;MACN4B,IAAI,EAAClB;MACL;IACJ,CAAC,CAAC;EAEN,CAAC,QAAMmB,GAAG,EAAC;IACP,MAAM7B,GAAG,CAAC;MACN4B,IAAI,EAAEpB,cAAc;MACpBa,IAAI,EAACQ,GAAG,CAACC,QAAQ,CAACT,IAAI;MAACU;IAC3B,CAAC,CAAC;EACN;AAEJ;AAIA,UAAUC,MAAMA,CAAA,EAAE;EAEd,IAAG;IACCN,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IAErB,MAAMxB,KAAK,CAAC,IAAI,CAAC;IACjB;IACA,MAAMH,GAAG,CAAC;MACN4B,IAAI,EAACf;IACT,CAAC,CAAC;EAEN,CAAC,QAAMgB,GAAG,EAAC;IACP,MAAM7B,GAAG,CAAC;MACN4B,IAAI,EAAEjB,eAAe;MACrBU,IAAI,EAACQ,GAAG,CAACC,QAAQ,CAACT;IACtB,CAAC,CAAC;EACN;AAEJ;AAGA,UAAUY,UAAUA,CAAA,EAAE;EAClB,MAAM/B,UAAU,CAACO,cAAc,EAACe,KAAK,CAAC,EAAC;AAC3C;;AAEA,UAAUU,WAAWA,CAAA,EAAE;EACnB,MAAMhC,UAAU,CAACU,eAAe,EAACoB,MAAM,CAAC;AAC5C;AAGA,eAAe,UAAUG,QAAQA,CAAA,EAAE;EAClC,MAAMvC,GAAG,CAAC,CACPC,IAAI,CAACoC,UAAU,CAAC,EAChBpC,IAAI,CAACqC,WAAW,CAAC,CACnB,CAAC;AACH"},"metadata":{},"sourceType":"module"}