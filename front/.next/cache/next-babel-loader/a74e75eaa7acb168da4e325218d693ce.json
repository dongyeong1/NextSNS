{"ast":null,"code":"var _jsxFileName = \"/Users/dong/dongprepare/front/components/PostCard.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Card, Button, Avatar, Popover, List, Comment } from 'antd';\nimport PropTypes from 'prop-types';\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport PostImages from './PostImages';\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\nimport FollowButton from './FollowButton';\nconst CardWrapper = styled.div`\n  margin-bottom: 20px;\n`;\nconst PostCard = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const id = useSelector(state => state.user.me && state.user.me.id);\n  const {\n    removePostLoading\n  } = useSelector(state => state.post);\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  const onRemovePost = useCallback(() => {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  return __jsx(CardWrapper, {\n    key: post.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 34\n      }\n    }) //postImage가 하나라도 있을때 작동\n    ,\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f96\",\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"message\",\n      onClick: onToggleComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"ellipsis\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 23\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        loading: removePostLoading,\n        onClick: onRemovePost,\n        type: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 23\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }))],\n    extra: __jsx(FollowButton, {\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 16\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: __jsx(PostCardContent, {\n      postData: post.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 24\n      }\n    })\n    // description={post.content}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })), commentFormOpened && __jsx(React.Fragment, null, __jsx(CommentForm, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), __jsx(List, {\n    header: `${post.Comments.length} 댓글`,\n    dataSource: post.Comments,\n    renderItem: item => __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, __jsx(Comment, {\n      author: item.User.nickname,\n      content: item.content,\n      avatar: __jsx(Avatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 33\n        }\n      }, item.User.nickname[0]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  })));\n};\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.any),\n    Images: PropTypes.arrayOf(PropTypes.any)\n  })\n};\nexport default PostCard;","map":{"version":3,"names":["React","useState","useCallback","Card","Button","Avatar","Popover","List","Comment","PropTypes","RetweetOutlined","HeartTwoTone","HeartOutlined","MessageOutlined","EllipsisOutlined","styled","Link","useDispatch","useSelector","CommentForm","PostCardContent","PostImages","REMOVE_POST_REQUEST","FollowButton","CardWrapper","div","PostCard","post","dispatch","commentFormOpened","setCommentFormOpened","id","state","user","me","removePostLoading","liked","setLiked","onToggleLike","prev","onToggleComment","onRemovePost","type","data","__jsx","key","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","cover","Images","images","actions","twoToneColor","onClick","content","Group","User","Fragment","loading","extra","Meta","avatar","nickname","title","description","postData","header","Comments","length","dataSource","renderItem","item","author","propTypes","shape","number","object","string","createdAt","arrayOf","any"],"sources":["/Users/dong/dongprepare/front/components/PostCard.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Card, Button, Avatar, Popover, List, Comment } from 'antd';\nimport PropTypes from 'prop-types';\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport PostImages from './PostImages';\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\nimport FollowButton from './FollowButton';\n\nconst CardWrapper = styled.div`\n  margin-bottom: 20px;\n`;\n\n\nconst PostCard = ({ post }) => {\n\n\n  const dispatch=useDispatch()\n\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\n  const id = useSelector((state) => state.user.me && state.user.me.id);\n  const {removePostLoading} =useSelector((state)=>state.post)\n\n  const [liked, setLiked] = useState(false);\n\n  const onToggleLike = useCallback(() => {\n    setLiked((prev) => !prev);\n  }, []);\n\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened((prev) => !prev);\n  }, []);\n\n\n  const onRemovePost=useCallback(()=>{\n      dispatch({\n          type:REMOVE_POST_REQUEST,\n          data:post.id\n      })\n  },[])\n\n  return (\n    <CardWrapper key={post.id}>\n      <Card\n        cover={post.Images[0] && <PostImages images={post.Images} />}//postImage가 하나라도 있을때 작동\n        actions={[\n          <RetweetOutlined key=\"retweet\" />,\n          liked\n            ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\n            : <HeartOutlined key=\"heart\" onClick={onToggleLike} />,\n          <MessageOutlined key=\"message\" onClick={onToggleComment} />,\n          <Popover\n            key=\"ellipsis\"\n            content={(\n              <Button.Group>\n\n                  \n                {id && post.User.id === id\n                  ? (\n                    <>\n                      <Button>수정</Button>\n                      <Button loading={removePostLoading} onClick={onRemovePost} type=\"danger\">삭제</Button>\n                    </>\n                  )\n                  : <Button>신고</Button>}\n              </Button.Group>\n            )}\n          >\n            <EllipsisOutlined />\n          </Popover>,\n        ]}\n        extra={<FollowButton post={post} />}\n      >\n        <Card.Meta\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n          title={post.User.nickname}\n          description={<PostCardContent postData={post.content} />}\n        // description={post.content}\n        />\n      </Card>\n      {\n          commentFormOpened && \n          <>\n          <CommentForm post={post}></CommentForm>\n          <List\n             header={`${post.Comments.length} 댓글`}\n             dataSource={post.Comments}\n             renderItem={(item)=>(\n                <li>\n                    <Comment \n                        author={item.User.nickname}\n                        content={item.content}\n                        avatar={<Avatar>{item.User.nickname[0]}</Avatar>}/>\n                </li>\n             )}\n          ></List>\n          </>\n      }\n      {/* {commentFormOpened && (\n        <>\n          <CommentForm post={post} />\n          <List\n            header={`${post.Comments.length} 댓글`}\n            itemLayout=\"horizontal\"\n            dataSource={post.Comments}\n            renderItem={(item) => (\n              <li>\n                <Comment\n                  author={item.User.nickname}\n                  avatar={(\n                    <Link href={{ pathname: '/user', query: { id: item.User.id } }} as={`/user/${item.User.id}`}>\n                      <a><Avatar>{item.User.nickname[0]}</Avatar></a>\n                    </Link>\n                  )}\n                  content={item.content}\n                />\n              </li>\n            )}\n          />\n        </>\n      )} */}\n    </CardWrapper>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.any),\n    Images: PropTypes.arrayOf(PropTypes.any),\n  }),\n};\n\nexport default PostCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}