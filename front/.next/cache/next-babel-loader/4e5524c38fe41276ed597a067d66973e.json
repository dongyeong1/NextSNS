{"ast":null,"code":"var _jsxFileName = \"/Users/dong/dongprepare/front/components/PostCard.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Card, Button, Avatar, Popover, List, Comment } from 'antd';\nimport PropTypes from 'prop-types';\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport { useSelector } from 'react-redux';\nimport CommentForm from './CommentForm';\n// import PostCardContent from './PostCardContent';\nimport PostImages from './PostImages';\n// import FollowButton from './FollowButton';\n\nconst CardWrapper = styled.div`\n  margin-bottom: 20px;\n`;\nconst PostCard = ({\n  post\n}) => {\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const id = useSelector(state => state.user.me && state.user.me.id);\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  return __jsx(CardWrapper, {\n    key: post.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 34\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f96\",\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"message\",\n      onClick: onToggleComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"ellipsis\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 23\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 23\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }))]\n    // extra={<FollowButton post={post} />}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname\n    //   description={<PostCardContent postData={post.content} />}\n    ,\n    description: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })), commentFormOpened && __jsx(React.Fragment, null, __jsx(CommentForm, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), __jsx(List, {\n    header: `${post.Comments.length} 댓글`,\n    dataSource: post.Comments,\n    renderItem: item => __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, __jsx(Comment, {\n      author: item.User.nickname,\n      content: item.content,\n      avatar: __jsx(Avatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 33\n        }\n      }, item.User.nickname[0]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  })));\n};\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.any),\n    Images: PropTypes.arrayOf(PropTypes.any)\n  })\n};\nexport default PostCard;","map":{"version":3,"names":["React","useState","useCallback","Card","Button","Avatar","Popover","List","Comment","PropTypes","RetweetOutlined","HeartTwoTone","HeartOutlined","MessageOutlined","EllipsisOutlined","styled","Link","useSelector","CommentForm","PostImages","CardWrapper","div","PostCard","post","commentFormOpened","setCommentFormOpened","id","state","user","me","liked","setLiked","onToggleLike","prev","onToggleComment","__jsx","key","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","cover","Images","images","actions","twoToneColor","onClick","content","Group","User","Fragment","type","Meta","avatar","nickname","title","description","header","Comments","length","dataSource","renderItem","item","author","propTypes","shape","number","object","string","createdAt","arrayOf","any"],"sources":["/Users/dong/dongprepare/front/components/PostCard.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Card, Button, Avatar, Popover, List, Comment } from 'antd';\nimport PropTypes from 'prop-types';\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport { useSelector } from 'react-redux';\n\nimport CommentForm from './CommentForm';\n// import PostCardContent from './PostCardContent';\nimport PostImages from './PostImages';\n// import FollowButton from './FollowButton';\n\nconst CardWrapper = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst PostCard = ({ post }) => {\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\n  const id = useSelector((state) => state.user.me && state.user.me.id);\n\n  const [liked, setLiked] = useState(false);\n\n  const onToggleLike = useCallback(() => {\n    setLiked((prev) => !prev);\n  }, []);\n\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened((prev) => !prev);\n  }, []);\n\n  return (\n    <CardWrapper key={post.id}>\n      <Card\n        cover={post.Images[0] && <PostImages images={post.Images} />}\n        actions={[\n          <RetweetOutlined key=\"retweet\" />,\n          liked\n            ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\n            : <HeartOutlined key=\"heart\" onClick={onToggleLike} />,\n          <MessageOutlined key=\"message\" onClick={onToggleComment} />,\n          <Popover\n            key=\"ellipsis\"\n            content={(\n              <Button.Group>\n\n                  \n                {id && post.User.id === id\n                  ? (\n                    <>\n                      <Button>수정</Button>\n                      <Button type=\"danger\">삭제</Button>\n                    </>\n                  )\n                  : <Button>신고</Button>}\n              </Button.Group>\n            )}\n          >\n            <EllipsisOutlined />\n          </Popover>,\n        ]}\n        // extra={<FollowButton post={post} />}\n      >\n        <Card.Meta\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n          title={post.User.nickname}\n        //   description={<PostCardContent postData={post.content} />}\n        description={post.content}\n        />\n      </Card>\n      {\n          commentFormOpened && \n          <>\n          <CommentForm post={post}></CommentForm>\n          <List\n             header={`${post.Comments.length} 댓글`}\n             dataSource={post.Comments}\n             renderItem={(item)=>(\n                <li>\n                    <Comment \n                        author={item.User.nickname}\n                        content={item.content}\n                        avatar={<Avatar>{item.User.nickname[0]}</Avatar>}/>\n                </li>\n             )}\n          ></List>\n          </>\n      }\n      {/* {commentFormOpened && (\n        <>\n          <CommentForm post={post} />\n          <List\n            header={`${post.Comments.length} 댓글`}\n            itemLayout=\"horizontal\"\n            dataSource={post.Comments}\n            renderItem={(item) => (\n              <li>\n                <Comment\n                  author={item.User.nickname}\n                  avatar={(\n                    <Link href={{ pathname: '/user', query: { id: item.User.id } }} as={`/user/${item.User.id}`}>\n                      <a><Avatar>{item.User.nickname[0]}</Avatar></a>\n                    </Link>\n                  )}\n                  content={item.content}\n                />\n              </li>\n            )}\n          />\n        </>\n      )} */}\n    </CardWrapper>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.any),\n    Images: PropTypes.arrayOf(PropTypes.any),\n  }),\n};\n\nexport default PostCard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACpD,SAASC,IAAI,EAAEC,MAAM,EAAEC,MAAM,EAAEC,OAAO,EAAEC,IAAI,EAAEC,OAAO,QAAQ,MAAM;AACnE,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,eAAe,EAAEC,YAAY,EAAEC,aAAa,EAAEC,eAAe,EAAEC,gBAAgB,QAAQ,mBAAmB;AACnH,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,IAAI,MAAM,WAAW;AAC5B,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAOC,WAAW,MAAM,eAAe;AACvC;AACA,OAAOC,UAAU,MAAM,cAAc;AACrC;;AAEA,MAAMC,WAAW,GAAGL,MAAM,CAACM,GAAI;AAC/B;AACA,CAAC;AAED,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC7B,MAAM;IAAA,GAACC,iBAAiB;IAAA,GAAEC;EAAoB,IAAIxB,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAMyB,EAAE,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACC,EAAE,IAAIF,KAAK,CAACC,IAAI,CAACC,EAAE,CAACH,EAAE,CAAC;EAEpE,MAAM;IAAA,GAACI,KAAK;IAAA,GAAEC;EAAQ,IAAI9B,QAAQ,CAAC,KAAK,CAAC;EAEzC,MAAM+B,YAAY,GAAG9B,WAAW,CAAC,MAAM;IACrC6B,QAAQ,CAAEE,IAAI,IAAK,CAACA,IAAI,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,eAAe,GAAGhC,WAAW,CAAC,MAAM;IACxCuB,oBAAoB,CAAEQ,IAAI,IAAK,CAACA,IAAI,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,OACEE,KAAA,CAACf,WAAW;IAACgB,GAAG,EAAEb,IAAI,CAACG,EAAG;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACxBP,KAAA,CAAChC,IAAI;IACHwC,KAAK,EAAEpB,IAAI,CAACqB,MAAM,CAAC,CAAC,CAAC,IAAIT,KAAA,CAAChB,UAAU;MAAC0B,MAAM,EAAEtB,IAAI,CAACqB,MAAO;MAAAP,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAE;IAC7DI,OAAO,EAAE,CACPX,KAAA,CAACzB,eAAe;MAAC0B,GAAG,EAAC,SAAS;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC,EACjCZ,KAAK,GACDK,KAAA,CAACxB,YAAY;MAACoC,YAAY,EAAC,SAAS;MAACX,GAAG,EAAC,OAAO;MAACY,OAAO,EAAEhB,YAAa;MAAAK,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC,GAC1EP,KAAA,CAACvB,aAAa;MAACwB,GAAG,EAAC,OAAO;MAACY,OAAO,EAAEhB,YAAa;MAAAK,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC,EACxDP,KAAA,CAACtB,eAAe;MAACuB,GAAG,EAAC,SAAS;MAACY,OAAO,EAAEd,eAAgB;MAAAG,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC,EAC3DP,KAAA,CAAC7B,OAAO;MACN8B,GAAG,EAAC,UAAU;MACda,OAAO,EACLd,KAAA,CAAC/B,MAAM,CAAC8C,KAAK;QAAAb,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAGVhB,EAAE,IAAIH,IAAI,CAAC4B,IAAI,CAACzB,EAAE,KAAKA,EAAE,GAEtBS,KAAA,CAAAnC,KAAA,CAAAoD,QAAA,QACEjB,KAAA,CAAC/B,MAAM;QAAAiC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,iBAAW,CAAC,EACnBP,KAAA,CAAC/B,MAAM;QAACiD,IAAI,EAAC,QAAQ;QAAAhB,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,iBAAW,CAChC,CAAC,GAEHP,KAAA,CAAC/B,MAAM;QAAAiC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,iBAAW,CACV,CACd;MAAAL,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAEFP,KAAA,CAACrB,gBAAgB;MAAAuB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CACZ,CAAC;IAEZ;IAAA;IAAAL,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEAP,KAAA,CAAChC,IAAI,CAACmD,IAAI;IACRC,MAAM,EAAEpB,KAAA,CAAC9B,MAAM;MAAAgC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAEnB,IAAI,CAAC4B,IAAI,CAACK,QAAQ,CAAC,CAAC,CAAU,CAAE;IACjDC,KAAK,EAAElC,IAAI,CAAC4B,IAAI,CAACK;IACnB;IAAA;IACAE,WAAW,EAAEnC,IAAI,CAAC0B,OAAQ;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACzB,CACG,CAAC,EAEHlB,iBAAiB,IACjBW,KAAA,CAAAnC,KAAA,CAAAoD,QAAA,QACAjB,KAAA,CAACjB,WAAW;IAACK,IAAI,EAAEA,IAAK;IAAAc,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAc,CAAC,EACvCP,KAAA,CAAC5B,IAAI;IACFoD,MAAM,EAAG,GAAEpC,IAAI,CAACqC,QAAQ,CAACC,MAAO,KAAK;IACrCC,UAAU,EAAEvC,IAAI,CAACqC,QAAS;IAC1BG,UAAU,EAAGC,IAAI,IACd7B,KAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACIP,KAAA,CAAC3B,OAAO;MACJyD,MAAM,EAAED,IAAI,CAACb,IAAI,CAACK,QAAS;MAC3BP,OAAO,EAAEe,IAAI,CAACf,OAAQ;MACtBM,MAAM,EAAEpB,KAAA,CAAC9B,MAAM;QAAAgC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAAEsB,IAAI,CAACb,IAAI,CAACK,QAAQ,CAAC,CAAC,CAAU,CAAE;MAAAnB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAC,CACtD,CACL;IAAAL,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACE,CACL,CAyBK,CAAC;AAElB,CAAC;AAEDpB,QAAQ,CAAC4C,SAAS,GAAG;EACnB3C,IAAI,EAAEd,SAAS,CAAC0D,KAAK,CAAC;IACpBzC,EAAE,EAAEjB,SAAS,CAAC2D,MAAM;IACpBjB,IAAI,EAAE1C,SAAS,CAAC4D,MAAM;IACtBpB,OAAO,EAAExC,SAAS,CAAC6D,MAAM;IACzBC,SAAS,EAAE9D,SAAS,CAAC4D,MAAM;IAC3BT,QAAQ,EAAEnD,SAAS,CAAC+D,OAAO,CAAC/D,SAAS,CAACgE,GAAG,CAAC;IAC1C7B,MAAM,EAAEnC,SAAS,CAAC+D,OAAO,CAAC/D,SAAS,CAACgE,GAAG;EACzC,CAAC;AACH,CAAC;AAED,eAAenD,QAAQ"},"metadata":{},"sourceType":"module"}