{"ast":null,"code":"var _jsxFileName = \"/Users/dong/dongprepare/front/pages/index.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport AppLayouts from '../components/AppLayouts';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostForm from '../components/postForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nfunction index() {\n  _s();\n  var _this = this;\n  var dispatch = useDispatch();\n  var _useSelector = useSelector(function (state) {\n      return state.post;\n    }),\n    hasMorePosts = _useSelector.hasMorePosts,\n    loadPostsLoading = _useSelector.loadPostsLoading;\n  useEffect(function () {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(function () {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_POSTS_REQUEST\n          });\n        }\n      }\n    }\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts, loadPostsLoading, hasMorePosts]);\n  var me = useSelector(function (state) {\n    return state.user.me;\n  });\n  var mainPosts = useSelector(function (state) {\n    return state.post.mainPosts;\n  });\n  return __jsx(AppLayouts, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, me ? __jsx(PostForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }) : null, mainPosts.map(function (p) {\n    return __jsx(PostCard, {\n      key: p.id,\n      post: p,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    });\n  }));\n}\n_s(index, \"SsjLL0pUwE7zDpHbZujDjnNEQcg=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\nexport default index;","map":{"version":3,"names":["React","useEffect","AppLayouts","useDispatch","useSelector","PostForm","PostCard","LOAD_POSTS_REQUEST","index","_s","_this","dispatch","_useSelector","state","post","hasMorePosts","loadPostsLoading","type","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","addEventListener","removeEventListener","mainPosts","me","user","__jsx","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","p","key","id"],"sources":["/Users/dong/dongprepare/front/pages/index.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport AppLayouts from '../components/AppLayouts'\nimport {useDispatch, useSelector} from 'react-redux'\nimport PostForm from '../components/postForm'\nimport PostCard from '../components/PostCard'\nimport { LOAD_POSTS_REQUEST } from '../reducers/post'\nfunction index() {\n    const dispatch=useDispatch();\n    const {hasMorePosts,loadPostsLoading}=useSelector((state)=>state.post)\n\n    useEffect(()=>{\n        \n            dispatch({\n                type:LOAD_POSTS_REQUEST\n            })\n        \n       \n    },[])\n\n    useEffect(()=>{\n        function onScroll(){\n            if(window.scrollY+document.documentElement.clientHeight>document.documentElement.scrollHeight-300){\n                if(hasMorePosts&& !loadPostsLoading){\n                    dispatch({\n                        type:LOAD_POSTS_REQUEST\n                    })\n                }\n            }\n        }\n        window.addEventListener('scroll',onScroll);\n        return()=>{\n            window.removeEventListener('scroll',onScroll)\n        }\n    },[mainPosts,loadPostsLoading,hasMorePosts])\n    const me=useSelector((state)=>state.user.me)\n    const mainPosts=useSelector((state)=>state.post.mainPosts)\n\n  return (\n      <AppLayouts>\n          {me?<PostForm></PostForm>:null}\n          {mainPosts.map((p)=>(\n            <PostCard key={p.id} post={p}></PostCard>\n          )) }\n      </AppLayouts>\n    \n  )\n}\n\nexport default index"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AACpD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,kBAAkB,QAAQ,kBAAkB;AACrD,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,KAAA;EACb,IAAMC,QAAQ,GAACR,WAAW,CAAC,CAAC;EAC5B,IAAAS,YAAA,GAAsCR,WAAW,CAAC,UAACS,KAAK;MAAA,OAAGA,KAAK,CAACC,IAAI;IAAA,EAAC;IAA/DC,YAAY,GAAAH,YAAA,CAAZG,YAAY;IAACC,gBAAgB,GAAAJ,YAAA,CAAhBI,gBAAgB;EAEpCf,SAAS,CAAC,YAAI;IAENU,QAAQ,CAAC;MACLM,IAAI,EAACV;IACT,CAAC,CAAC;EAGV,CAAC,EAAC,EAAE,CAAC;EAELN,SAAS,CAAC,YAAI;IACV,SAASiB,QAAQA,CAAA,EAAE;MACf,IAAGC,MAAM,CAACC,OAAO,GAACC,QAAQ,CAACC,eAAe,CAACC,YAAY,GAACF,QAAQ,CAACC,eAAe,CAACE,YAAY,GAAC,GAAG,EAAC;QAC9F,IAAGT,YAAY,IAAG,CAACC,gBAAgB,EAAC;UAChCL,QAAQ,CAAC;YACLM,IAAI,EAACV;UACT,CAAC,CAAC;QACN;MACJ;IACJ;IACAY,MAAM,CAACM,gBAAgB,CAAC,QAAQ,EAACP,QAAQ,CAAC;IAC1C,OAAM,YAAI;MACNC,MAAM,CAACO,mBAAmB,CAAC,QAAQ,EAACR,QAAQ,CAAC;IACjD,CAAC;EACL,CAAC,EAAC,CAACS,SAAS,EAACX,gBAAgB,EAACD,YAAY,CAAC,CAAC;EAC5C,IAAMa,EAAE,GAACxB,WAAW,CAAC,UAACS,KAAK;IAAA,OAAGA,KAAK,CAACgB,IAAI,CAACD,EAAE;EAAA,EAAC;EAC5C,IAAMD,SAAS,GAACvB,WAAW,CAAC,UAACS,KAAK;IAAA,OAAGA,KAAK,CAACC,IAAI,CAACa,SAAS;EAAA,EAAC;EAE5D,OACIG,KAAA,CAAC5B,UAAU;IAAA6B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACNR,EAAE,GAACE,KAAA,CAACzB,QAAQ;IAAA0B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAW,CAAC,GAAC,IAAI,EAC7BT,SAAS,CAACU,GAAG,CAAC,UAACC,CAAC;IAAA,OACfR,KAAA,CAACxB,QAAQ;MAACiC,GAAG,EAAED,CAAC,CAACE,EAAG;MAAC1B,IAAI,EAAEwB,CAAE;MAAAP,MAAA,EAAArB,KAAA;MAAAsB,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAW,CAAC;EAAA,CAC1C,CACO,CAAC;AAGnB;AAAC3B,EAAA,CAxCQD,KAAK;EAAA,QACKL,WAAW,EACYC,WAAW,EA0BxCA,WAAW,EACJA,WAAW;AAAA;AAa/B,eAAeI,KAAK"},"metadata":{},"sourceType":"module"}