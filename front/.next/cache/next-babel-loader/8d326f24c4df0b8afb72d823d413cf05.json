{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/dong/dongprepare/front/components/CommentForm.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport { Input, Button, Form } from 'antd';\nimport useinput from '../hooks/useinput';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addComment } from '../reducers/post';\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  var dispatch = useDispatch();\n  var _useinput = useinput(''),\n    _useinput2 = _slicedToArray(_useinput, 2),\n    text = _useinput2[0],\n    onChangeText = _useinput2[1];\n  var onSubmit = useCallback(function () {\n    dispatch(addComment({\n      content: text,\n      userId: id,\n      postId: post.id\n    }));\n    console.log(post.id, text);\n  }, [text]);\n  return __jsx(Form, {\n    onFinish: onSubmit,\n    style: {\n      position: 'relative'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    rows: 3,\n    style: {\n      marginTop: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: {\n      position: 'absolute',\n      right: '0px',\n      bottom: '-40px',\n      zIndex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"\\uC4F0\\uAE30\"));\n};\n_s(CommentForm, \"MbGqAcFEGNXmynXUOIxZ52i2ivk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = CommentForm;\nexport default CommentForm;\nvar _c;\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["React","useCallback","Input","Button","Form","useinput","useDispatch","useSelector","addComment","CommentForm","_ref","_s","post","id","state","_state$user$me","user","me","dispatch","_useinput","_useinput2","_slicedToArray","text","onChangeText","onSubmit","content","userId","postId","console","log","__jsx","onFinish","style","position","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","TextArea","value","onChange","rows","marginTop","type","htmlType","right","bottom","zIndex","_c","$RefreshReg$"],"sources":["/Users/dong/dongprepare/front/components/CommentForm.js"],"sourcesContent":["import React,{useCallback} from 'react'\nimport {Input,Button,Form} from 'antd'\nimport useinput from '../hooks/useinput'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addComment } from '../reducers/post'\n\nconst CommentForm = ({post}) => {\n\n    const id =useSelector((state)=>state.user.me?.id)\n\n    const dispatch=useDispatch();\n\n    const [text,onChangeText]=useinput('')\n\n    const onSubmit=useCallback(()=>{\n        dispatch(addComment({ content: text, userId: id, postId: post.id },))\n\n        console.log(post.id,text)\n    },[text])\n\n  return (\n    <Form onFinish={onSubmit} style={{position:'relative'}}>\n        <Input.TextArea  value={text} onChange={onChangeText} rows={3} \n        style={{marginTop:5}}\n        ></Input.TextArea>\n        <Button type='primary' htmlType='submit'\n        style={{position:'absolute' ,right:'0px', bottom:'-40px',zIndex:1}}\n        >쓰기</Button>\n    </Form>\n  )\n}\n\nexport default CommentForm"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAEC,WAAW,QAAO,OAAO;AACvC,SAAQC,KAAK,EAACC,MAAM,EAACC,IAAI,QAAO,MAAM;AACtC,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,kBAAkB;AAE7C,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAAC,IAAA,EAAe;EAAAC,EAAA;EAAA,IAAVC,IAAI,GAAAF,IAAA,CAAJE,IAAI;EAEtB,IAAMC,EAAE,GAAEN,WAAW,CAAC,UAACO,KAAK;IAAA,IAAAC,cAAA;IAAA,QAAAA,cAAA,GAAGD,KAAK,CAACE,IAAI,CAACC,EAAE,cAAAF,cAAA,uBAAbA,cAAA,CAAeF,EAAE;EAAA,EAAC;EAEjD,IAAMK,QAAQ,GAACZ,WAAW,CAAC,CAAC;EAE5B,IAAAa,SAAA,GAA0Bd,QAAQ,CAAC,EAAE,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,IAAI,GAAAF,UAAA;IAACG,YAAY,GAAAH,UAAA;EAExB,IAAMI,QAAQ,GAACvB,WAAW,CAAC,YAAI;IAC3BiB,QAAQ,CAACV,UAAU,CAAC;MAAEiB,OAAO,EAAEH,IAAI;MAAEI,MAAM,EAAEb,EAAE;MAAEc,MAAM,EAAEf,IAAI,CAACC;IAAG,CAAE,CAAC,CAAC;IAErEe,OAAO,CAACC,GAAG,CAACjB,IAAI,CAACC,EAAE,EAACS,IAAI,CAAC;EAC7B,CAAC,EAAC,CAACA,IAAI,CAAC,CAAC;EAEX,OACEQ,KAAA,CAAC1B,IAAI;IAAC2B,QAAQ,EAAEP,QAAS;IAACQ,KAAK,EAAE;MAACC,QAAQ,EAAC;IAAU,CAAE;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACnDV,KAAA,CAAC5B,KAAK,CAACuC,QAAQ;IAAEC,KAAK,EAAEpB,IAAK;IAACqB,QAAQ,EAAEpB,YAAa;IAACqB,IAAI,EAAE,CAAE;IAC9DZ,KAAK,EAAE;MAACa,SAAS,EAAC;IAAC,CAAE;IAAAX,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACJ,CAAC,EAClBV,KAAA,CAAC3B,MAAM;IAAC2C,IAAI,EAAC,SAAS;IAACC,QAAQ,EAAC,QAAQ;IACxCf,KAAK,EAAE;MAACC,QAAQ,EAAC,UAAU;MAAEe,KAAK,EAAC,KAAK;MAAEC,MAAM,EAAC,OAAO;MAACC,MAAM,EAAC;IAAC,CAAE;IAAAhB,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,iBACxD,CACT,CAAC;AAEX,CAAC;AAAA7B,EAAA,CAxBKF,WAAW;EAAA,QAEHF,WAAW,EAEND,WAAW;AAAA;AAAA6C,EAAA,GAJxB1C,WAAW;AA0BjB,eAAeA,WAAW;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}