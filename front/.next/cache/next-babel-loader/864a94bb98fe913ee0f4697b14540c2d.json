{"ast":null,"code":"import { func } from 'prop-types';\nimport { all, fork, call, take, put, takeEvery, takeLatest, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nfunction logInAPI(data) {\n  return axios.post('/api/login');\n}\nfunction logOutAPI() {\n  return axios.post('/api/login');\n}\nfunction* logIn(action) {\n  try {\n    console.log('loginnnnnnn');\n    yield delay(1000);\n    // const result =yield call(logInAPI,action.data) //call은동기니깐 put할때까지 기다려준다\n    yield put({\n      type: 'LOG_IN_SUCCESS'\n      // data:result.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: err.response.data\n    });\n  }\n}\nfunction* logOut() {\n  try {\n    console.log('asdads');\n    yield delay(3000);\n    // const result =yield call(logOutAPI) //call은동기니깐 put할때까지 기다려준다\n    yield put({\n      type: 'LOG_OUT_SUCCESS'\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_OUT_FAILURE',\n      data: err.response.data\n    });\n  }\n}\nfunction* watchLogin() {\n  yield takeLatest('LOG_IN_REQUEST', logIn); //LOG_IN이란 액션이 실행될때까지 기다리겠다\n}\n\nfunction* watchLogOut() {\n  yield takeLatest('LOG_OUT_REQUEST', logOut);\n}\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogOut)]);\n}","map":{"version":3,"names":["func","all","fork","call","take","put","takeEvery","takeLatest","delay","axios","logInAPI","data","post","logOutAPI","logIn","action","console","log","type","err","response","logOut","watchLogin","watchLogOut","userSaga"],"sources":["/Users/dong/dongprepare/front/sagas/user.js"],"sourcesContent":["import { func } from 'prop-types'\nimport {all,fork,call,take,put, takeEvery, takeLatest, delay} from 'redux-saga/effects'\n\nimport axios from 'axios'\n\n\n\n\nfunction logInAPI(data){\n    return axios.post('/api/login')\n}\n\nfunction logOutAPI(){\n    return axios.post('/api/login')\n}\n\n\n\nfunction* logIn(action){\n\n    try{\n                console.log('loginnnnnnn')\n\n        yield delay(1000)\n        // const result =yield call(logInAPI,action.data) //call은동기니깐 put할때까지 기다려준다\n        yield put({\n            type:'LOG_IN_SUCCESS',\n            // data:result.data\n        })\n        \n    }catch(err){\n        yield put({\n            type: 'LOG_IN_FAILURE',\n            data:err.response.data,\n        })\n    }\n    \n}\n\n\n\nfunction* logOut(){\n\n    try{\n        console.log('asdads')\n\n        yield delay(3000)\n        // const result =yield call(logOutAPI) //call은동기니깐 put할때까지 기다려준다\n        yield put({\n            type:'LOG_OUT_SUCCESS',\n        })\n        \n    }catch(err){\n        yield put({\n            type: 'LOG_OUT_FAILURE',\n            data:err.response.data,\n        })\n    }\n    \n}\n\n\nfunction* watchLogin(){\n    yield takeLatest('LOG_IN_REQUEST',logIn) //LOG_IN이란 액션이 실행될때까지 기다리겠다\n}\n\nfunction* watchLogOut(){\n    yield takeLatest('LOG_OUT_REQUEST',logOut)\n}\n\n\nexport default function* userSaga(){\n yield all([\n    fork(watchLogin),\n    fork(watchLogOut),\n ])\n}"],"mappings":"AAAA,SAASA,IAAI,QAAQ,YAAY;AACjC,SAAQC,GAAG,EAACC,IAAI,EAACC,IAAI,EAACC,IAAI,EAACC,GAAG,EAAEC,SAAS,EAAEC,UAAU,EAAEC,KAAK,QAAO,oBAAoB;AAEvF,OAAOC,KAAK,MAAM,OAAO;AAKzB,SAASC,QAAQA,CAACC,IAAI,EAAC;EACnB,OAAOF,KAAK,CAACG,IAAI,CAAC,YAAY,CAAC;AACnC;AAEA,SAASC,SAASA,CAAA,EAAE;EAChB,OAAOJ,KAAK,CAACG,IAAI,CAAC,YAAY,CAAC;AACnC;AAIA,UAAUE,KAAKA,CAACC,MAAM,EAAC;EAEnB,IAAG;IACSC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAElC,MAAMT,KAAK,CAAC,IAAI,CAAC;IACjB;IACA,MAAMH,GAAG,CAAC;MACNa,IAAI,EAAC;MACL;IACJ,CAAC,CAAC;EAEN,CAAC,QAAMC,GAAG,EAAC;IACP,MAAMd,GAAG,CAAC;MACNa,IAAI,EAAE,gBAAgB;MACtBP,IAAI,EAACQ,GAAG,CAACC,QAAQ,CAACT;IACtB,CAAC,CAAC;EACN;AAEJ;AAIA,UAAUU,MAAMA,CAAA,EAAE;EAEd,IAAG;IACCL,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IAErB,MAAMT,KAAK,CAAC,IAAI,CAAC;IACjB;IACA,MAAMH,GAAG,CAAC;MACNa,IAAI,EAAC;IACT,CAAC,CAAC;EAEN,CAAC,QAAMC,GAAG,EAAC;IACP,MAAMd,GAAG,CAAC;MACNa,IAAI,EAAE,iBAAiB;MACvBP,IAAI,EAACQ,GAAG,CAACC,QAAQ,CAACT;IACtB,CAAC,CAAC;EACN;AAEJ;AAGA,UAAUW,UAAUA,CAAA,EAAE;EAClB,MAAMf,UAAU,CAAC,gBAAgB,EAACO,KAAK,CAAC,EAAC;AAC7C;;AAEA,UAAUS,WAAWA,CAAA,EAAE;EACnB,MAAMhB,UAAU,CAAC,iBAAiB,EAACc,MAAM,CAAC;AAC9C;AAGA,eAAe,UAAUG,QAAQA,CAAA,EAAE;EAClC,MAAMvB,GAAG,CAAC,CACPC,IAAI,CAACoB,UAAU,CAAC,EAChBpB,IAAI,CAACqB,WAAW,CAAC,CACnB,CAAC;AACH"},"metadata":{},"sourceType":"module"}