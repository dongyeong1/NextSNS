{"ast":null,"code":"import { func } from 'prop-types';\nimport { all, fork, call, take, put, takeEvery, takeLatest, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport postSaga from './post';\nimport userSaga from './user';\nexport default function* rootSaga() {\n  yield all([fork(postSaga), fork(userSaga)]);\n}\n\n//takeLatest는 여러번요청해도 마지막 요청만 실행 단 전요청이 로딩중일때만 무시 \n//그리고 프론트에서 백으로 요청한걸 무시하는게아니라 백에서 프론트로 응답한걸무시한다\n\n//all은 배열을받고 배열안에있는걸 다 실행시켜준다\n//fork는 함수를 실행하는것 (비동기함수호출)\n//call은 함수를 실행하는것 (동기함수호출)","map":{"version":3,"names":["func","all","fork","call","take","put","takeEvery","takeLatest","delay","axios","postSaga","userSaga","rootSaga"],"sources":["/Users/dong/dongprepare/front/sagas/index.js"],"sourcesContent":["import { func } from 'prop-types'\nimport {all,fork,call,take,put, takeEvery, takeLatest, delay} from 'redux-saga/effects'\n\nimport axios from 'axios'\n\n\nimport postSaga from './post'\nimport  userSaga from './user'\n\nexport default function* rootSaga(){\n\n    yield all([\n        fork(postSaga),\n        fork(userSaga),\n    \n    ])\n\n}\n\n\n//takeLatest는 여러번요청해도 마지막 요청만 실행 단 전요청이 로딩중일때만 무시 \n//그리고 프론트에서 백으로 요청한걸 무시하는게아니라 백에서 프론트로 응답한걸무시한다\n\n\n\n\n//all은 배열을받고 배열안에있는걸 다 실행시켜준다\n//fork는 함수를 실행하는것 (비동기함수호출)\n//call은 함수를 실행하는것 (동기함수호출)"],"mappings":"AAAA,SAASA,IAAI,QAAQ,YAAY;AACjC,SAAQC,GAAG,EAACC,IAAI,EAACC,IAAI,EAACC,IAAI,EAACC,GAAG,EAAEC,SAAS,EAAEC,UAAU,EAAEC,KAAK,QAAO,oBAAoB;AAEvF,OAAOC,KAAK,MAAM,OAAO;AAGzB,OAAOC,QAAQ,MAAM,QAAQ;AAC7B,OAAQC,QAAQ,MAAM,QAAQ;AAE9B,eAAe,UAAUC,QAAQA,CAAA,EAAE;EAE/B,MAAMX,GAAG,CAAC,CACNC,IAAI,CAACQ,QAAQ,CAAC,EACdR,IAAI,CAACS,QAAQ,CAAC,CAEjB,CAAC;AAEN;;AAGA;AACA;;AAKA;AACA;AACA"},"metadata":{},"sourceType":"module"}